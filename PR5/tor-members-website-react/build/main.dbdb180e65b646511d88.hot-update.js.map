{"version":3,"file":"main.dbdb180e65b646511d88.hot-update.js","sources":["webpack:///./src/components/molecules/bathroom/BathroomContainer.tsx"],"sourcesContent":["import gql from 'graphql-tag';\nimport * as React from 'react';\nimport InputWithToggle from '../InputWithToggle';\nimport { Field } from 'formik';\nimport { Query } from 'react-apollo';\nimport { BathroomTypesQuery, BedroomTypesQuery } from '../../../entities/schemaTypes';\n\nconst BATHROOMTYPES_QUERY = gql`\n    query BathroomTypesQuery {\n        bathroomTypes {\n            id\n            name\n        }\n    }\n`;\n\nconst BEDROOMTYPES_QUERY = gql`\n    query BedroomTypesQuery {\n        bedroomTypes {\n            id\n            name\n        }\n    }\n`;\n\nexport const BathroomInputTypes = () => {\n    return (\n        <Query<BathroomTypesQuery> query={BATHROOMTYPES_QUERY}>\n            {({ data, loading, error }) => {\n                if (loading || error || !data) {\n                    return null;\n                }\n                const options: string[] = [];\n                const optionValues: string[] = [];\n                data.bathroomTypes.forEach(type => {\n                    options.push(type.name);\n                    optionValues.push(type.id);\n                });\n                return (\n                    <Field name=\"type.id\" options={options} optionValues={optionValues} component={InputWithToggle} />\n                );\n            }}\n        </Query>\n    );\n};\n\nexport const BedroomInputTypes = () => {\n    return (\n        <Query<BedroomTypesQuery> query={BEDROOMTYPES_QUERY}>\n            {({ data, loading, error }) => {\n                if (loading || error || !data) {\n                    return null;\n                }\n                const options: string[] = [];\n                const optionValues: string[] = [];\n                data.bedroomTypes.forEach(type => {\n                    options.push(type.name);\n                    optionValues.push(type.id);\n                });\n                return (\n                    <Field name=\"type.id\" options={options} optionValues={optionValues} component={InputWithToggle} />\n                );\n            }}\n        </Query>\n    );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAGA;AASA;AASA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;AAEA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGA;;;;;A","sourceRoot":""}