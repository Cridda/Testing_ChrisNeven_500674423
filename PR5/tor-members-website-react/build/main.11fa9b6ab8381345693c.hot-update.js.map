{"version":3,"file":"main.11fa9b6ab8381345693c.hot-update.js","sources":["webpack:///./src/components/molecules/AccommodationPickerEntry.tsx"],"sourcesContent":["import React, { SFC } from 'react';\nimport styled from 'styled-components';\nimport ToggleButton from '../atoms/ToggleButton';\nimport { NavLink } from 'react-router-dom';\nimport { Location } from 'history';\nimport { AccommodationsQuery_accommodations } from '../../entities/schemaTypes';\n\ninterface Props {\n    entry: AccommodationsQuery_accommodations;\n    first: boolean;\n    opened: boolean;\n    location: Location;\n    setOpened: (newState: boolean) => void;\n    onlyOneEntry: boolean;\n}\n\nconst AccommodationPickerEntry: SFC<Props> = ({ onlyOneEntry, entry, first, setOpened, opened, location }) => {\n    const { name, photos, code, id } = entry;\n    return (\n        <Container first={first} opened={opened}>\n            <Link\n                exact\n                onClick={() => setOpened(false)}\n                to={`/accommodation/${id}`}\n                opened={opened ? 1 : 0} // hopefully temporary solution for being attached to the DOM node: https://github.com/styled-components/styled-components/issues/1198\n            >\n                <Thumbnail src={photos[0].url} />\n                <Description>\n                    <Title>\n                        {name.length > 40\n                            ? name\n                                  .substring(0, 35)\n                                  .trim()\n                                  .concat('...')\n                            : name}\n                    </Title>\n                    <Code>{code}</Code>\n                </Description>\n            </Link>\n            {first && !onlyOneEntry && (\n                <ToggleButton fill={opened ? '#000' : '#FFF'} handleOnToggle={() => setOpened(!opened)} />\n            )}\n        </Container>\n    );\n};\n\nexport default AccommodationPickerEntry;\n\nconst Container = styled.div<{ opened: boolean; first: boolean }>`\n    color: ${({ opened }) => (opened ? 'black' : 'white')};\n    display: flex;\n    align-items: center;\n    height: 7.2rem;\n    background-color: ${({ opened }) => opened && 'white'};\n    border-bottom: ${({ opened }) => opened && '1px solid #F2F2F2'};\n`;\nconst Link = styled(NavLink)<{ opened: number }>`\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    height: 7.2rem;\n    width: 100%;\n\n    &:after {\n        content: '';\n        position: absolute;\n        top: ${({ opened }) => (opened ? '0' : 'auto')};\n        left: ${({ opened }) => (opened ? '-1px' : '0')};\n        right: ${({ opened }) => (opened ? 'auto' : '0')};\n        width: ${({ opened }) => (opened ? '.4rem' : 'auto')};\n        height: ${({ opened }) => (opened ? '7.2rem' : '.4rem')};\n        bottom: 0;\n        background-color: ${({ theme }) => theme.colors.primary.turquoise};\n        opacity: 0;\n        pointer-events: none;\n        z-index: 1;\n        transition: 0.25s opacity;\n    }\n\n    &.active {\n        &:after {\n            opacity: 1;\n        }\n    }\n\n    &:hover {\n        background-color: ${({ opened, theme }) => opened && theme.colors.light.flash};\n    }\n`;\nconst Thumbnail = styled.img`\n    margin-left: 1rem;\n    width: 7.2rem;\n    height: 4.5rem;\n    object-fit: cover;\n    border-radius: 4px;\n`;\n\nconst Description = styled.div`\n    display: flex;\n    height: 4.5rem;\n    width: 25rem;\n    flex-direction: column;\n    justify-self: center;\n    margin: 0rem 1rem;\n`;\nconst Title = styled.div`\n    font-weight: 500;\n    line-height: 1.1em;\n    width: 20rem;\n`;\n\nconst Code = styled.div`\n    color: ${({ theme }) => theme.colors.dark.silver};\n    font-size: 0.8em;\n`;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAkBA;AAAA;AAIA;AAEA;AAEA;AAAA;;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAUA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAGA;AAAA;;AAAA;AAQA;AAAA;;AAAA;AAQA;AAAA;;AAAA;AAMA;AAAA;;AAAA;AACA;AAAA;AAAA;;;;;A","sourceRoot":""}